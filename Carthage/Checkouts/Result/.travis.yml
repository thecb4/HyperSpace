# safelist
branches:
  only:
  - master

language: generic

env:
  global:
    - PROJECT=Result

matrix:
  include:
    - { os: osx,   language: objective-c,   osx_image: xcode9.2,   env: 'DEPMGT=Carthage   PLATFORM=macOS     DESTINATION="platform=OS X"' }
    - { os: osx,   language: objective-c,   osx_image: xcode9.2,   env: 'DEPMGT=Carthage   PLATFORM=iOS       DESTINATION="platform=iOS Simulator,name=iPhone 8"' }
    - { os: osx,   language: objective-c,   osx_image: xcode9.2,   env: 'DEPMGT=Carthage   PLATFORM=watchOS   DESTINATION="platform=watchOS Simulator,name=Apple Watch - 38mm"'}
    - { os: osx,   language: objective-c,   osx_image: xcode9.2,   env: 'DEPMGT=Carthage   PLATFORM=tvOS      DESTINATION="platform=tvOS Simulator,name=Apple TV"' }
    - { os: osx,   language: objective-c,   osx_image: xcode9.2,   env: 'DEPMGT=SwiftPM' }
    - { os: linux,    dist: trusty,   sudo: required,   language: generic,    env:  'DEPMGT=SwiftPM SWIFT_VERSION=4.0'}

before_install:
  - case $DEPMGT in
    Carthage)
      brew update;
      brew outdated carthage || brew upgrade carthage;;
    SwiftPM)
      if [ "$TRAVIS_OS_NAME" == "linux" ]; then
          eval "$(curl -sL https://swiftenv.fuller.li/install.sh)";
      fi;
      swift package --enable-prefetching update;;
    *)
      ;;
    esac;

script:
  - case $DEPMGT in
    Carthage)
      xcodebuild clean build -project "${PROJECT}.xcodeproj" -scheme "${PROJECT}_${PLATFORM}";
      travis_retry set -o pipefail && xcodebuild test -project "${PROJECT}.xcodeproj" -scheme "${PROJECT}_${PLATFORM}" -destination "$DESTINATION" -enableCodeCoverage YES | xcpretty;
      carthage build --no-skip-current --platform $PLATFORM;;
    SwiftPM)
      swift test;;
    *)
      ;;
    esac;

after_success:
  - case $DEPMGT in
    Carthage)
      bash <(curl -s https://codecov.io/bash);;
    *)
      ;;
    esac;

notifications:
  email: true
